/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.contacts.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the FlaskGroupMessages service. Represents a row in the &quot;Contacts_FlaskGroupMessages&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.contacts.model.impl.FlaskGroupMessagesModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.contacts.model.impl.FlaskGroupMessagesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FlaskGroupMessages
 * @see com.liferay.contacts.model.impl.FlaskGroupMessagesImpl
 * @see com.liferay.contacts.model.impl.FlaskGroupMessagesModelImpl
 * @generated
 */
public interface FlaskGroupMessagesModel extends BaseModel<FlaskGroupMessages> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a flask group messages model instance should use the {@link FlaskGroupMessages} interface instead.
	 */

	/**
	 * Returns the primary key of this flask group messages.
	 *
	 * @return the primary key of this flask group messages
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this flask group messages.
	 *
	 * @param primaryKey the primary key of this flask group messages
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the group messages ID of this flask group messages.
	 *
	 * @return the group messages ID of this flask group messages
	 */
	public long getGroupMessagesId();

	/**
	 * Sets the group messages ID of this flask group messages.
	 *
	 * @param groupMessagesId the group messages ID of this flask group messages
	 */
	public void setGroupMessagesId(long groupMessagesId);

	/**
	 * Returns the sender email of this flask group messages.
	 *
	 * @return the sender email of this flask group messages
	 */
	@AutoEscape
	public String getSenderEmail();

	/**
	 * Sets the sender email of this flask group messages.
	 *
	 * @param senderEmail the sender email of this flask group messages
	 */
	public void setSenderEmail(String senderEmail);

	/**
	 * Returns the sender user ID of this flask group messages.
	 *
	 * @return the sender user ID of this flask group messages
	 */
	public long getSenderUserId();

	/**
	 * Sets the sender user ID of this flask group messages.
	 *
	 * @param senderUserId the sender user ID of this flask group messages
	 */
	public void setSenderUserId(long senderUserId);

	/**
	 * Returns the sender user uuid of this flask group messages.
	 *
	 * @return the sender user uuid of this flask group messages
	 * @throws SystemException if a system exception occurred
	 */
	public String getSenderUserUuid() throws SystemException;

	/**
	 * Sets the sender user uuid of this flask group messages.
	 *
	 * @param senderUserUuid the sender user uuid of this flask group messages
	 */
	public void setSenderUserUuid(String senderUserUuid);

	/**
	 * Returns the sender name of this flask group messages.
	 *
	 * @return the sender name of this flask group messages
	 */
	@AutoEscape
	public String getSenderName();

	/**
	 * Sets the sender name of this flask group messages.
	 *
	 * @param senderName the sender name of this flask group messages
	 */
	public void setSenderName(String senderName);

	/**
	 * Returns the group ID of this flask group messages.
	 *
	 * @return the group ID of this flask group messages
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this flask group messages.
	 *
	 * @param groupId the group ID of this flask group messages
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the message of this flask group messages.
	 *
	 * @return the message of this flask group messages
	 */
	@AutoEscape
	public String getMessage();

	/**
	 * Sets the message of this flask group messages.
	 *
	 * @param message the message of this flask group messages
	 */
	public void setMessage(String message);

	/**
	 * Returns the send email of this flask group messages.
	 *
	 * @return the send email of this flask group messages
	 */
	public boolean getSendEmail();

	/**
	 * Returns <code>true</code> if this flask group messages is send email.
	 *
	 * @return <code>true</code> if this flask group messages is send email; <code>false</code> otherwise
	 */
	public boolean isSendEmail();

	/**
	 * Sets whether this flask group messages is send email.
	 *
	 * @param sendEmail the send email of this flask group messages
	 */
	public void setSendEmail(boolean sendEmail);

	/**
	 * Returns the date time of this flask group messages.
	 *
	 * @return the date time of this flask group messages
	 */
	public Date getDateTime();

	/**
	 * Sets the date time of this flask group messages.
	 *
	 * @param dateTime the date time of this flask group messages
	 */
	public void setDateTime(Date dateTime);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.liferay.contacts.model.FlaskGroupMessages flaskGroupMessages);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.liferay.contacts.model.FlaskGroupMessages> toCacheModel();

	@Override
	public com.liferay.contacts.model.FlaskGroupMessages toEscapedModel();

	@Override
	public com.liferay.contacts.model.FlaskGroupMessages toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}