/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rumbasolutions.flask.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AdCampaign service. Represents a row in the &quot;flaskads_AdCampaign&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.rumbasolutions.flask.model.impl.AdCampaignModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.rumbasolutions.flask.model.impl.AdCampaignImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AdCampaign
 * @see com.rumbasolutions.flask.model.impl.AdCampaignImpl
 * @see com.rumbasolutions.flask.model.impl.AdCampaignModelImpl
 * @generated
 */
public interface AdCampaignModel extends BaseModel<AdCampaign> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a ad campaign model instance should use the {@link AdCampaign} interface instead.
	 */

	/**
	 * Returns the primary key of this ad campaign.
	 *
	 * @return the primary key of this ad campaign
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this ad campaign.
	 *
	 * @param primaryKey the primary key of this ad campaign
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the campaign ID of this ad campaign.
	 *
	 * @return the campaign ID of this ad campaign
	 */
	public long getCampaignId();

	/**
	 * Sets the campaign ID of this ad campaign.
	 *
	 * @param campaignId the campaign ID of this ad campaign
	 */
	public void setCampaignId(long campaignId);

	/**
	 * Returns the user ID of this ad campaign.
	 *
	 * @return the user ID of this ad campaign
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this ad campaign.
	 *
	 * @param userId the user ID of this ad campaign
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this ad campaign.
	 *
	 * @return the user uuid of this ad campaign
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this ad campaign.
	 *
	 * @param userUuid the user uuid of this ad campaign
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the created date of this ad campaign.
	 *
	 * @return the created date of this ad campaign
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this ad campaign.
	 *
	 * @param createdDate the created date of this ad campaign
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the modified date of this ad campaign.
	 *
	 * @return the modified date of this ad campaign
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this ad campaign.
	 *
	 * @param modifiedDate the modified date of this ad campaign
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the campaign name of this ad campaign.
	 *
	 * @return the campaign name of this ad campaign
	 */
	@AutoEscape
	public String getCampaignName();

	/**
	 * Sets the campaign name of this ad campaign.
	 *
	 * @param campaignName the campaign name of this ad campaign
	 */
	public void setCampaignName(String campaignName);

	/**
	 * Returns the customer ID of this ad campaign.
	 *
	 * @return the customer ID of this ad campaign
	 */
	public long getCustomerId();

	/**
	 * Sets the customer ID of this ad campaign.
	 *
	 * @param customerId the customer ID of this ad campaign
	 */
	public void setCustomerId(long customerId);

	/**
	 * Returns the display general of this ad campaign.
	 *
	 * @return the display general of this ad campaign
	 */
	public boolean getDisplayGeneral();

	/**
	 * Returns <code>true</code> if this ad campaign is display general.
	 *
	 * @return <code>true</code> if this ad campaign is display general; <code>false</code> otherwise
	 */
	public boolean isDisplayGeneral();

	/**
	 * Sets whether this ad campaign is display general.
	 *
	 * @param displayGeneral the display general of this ad campaign
	 */
	public void setDisplayGeneral(boolean displayGeneral);

	/**
	 * Returns the display pre event of this ad campaign.
	 *
	 * @return the display pre event of this ad campaign
	 */
	public boolean getDisplayPreEvent();

	/**
	 * Returns <code>true</code> if this ad campaign is display pre event.
	 *
	 * @return <code>true</code> if this ad campaign is display pre event; <code>false</code> otherwise
	 */
	public boolean isDisplayPreEvent();

	/**
	 * Sets whether this ad campaign is display pre event.
	 *
	 * @param displayPreEvent the display pre event of this ad campaign
	 */
	public void setDisplayPreEvent(boolean displayPreEvent);

	/**
	 * Returns the display during event of this ad campaign.
	 *
	 * @return the display during event of this ad campaign
	 */
	public boolean getDisplayDuringEvent();

	/**
	 * Returns <code>true</code> if this ad campaign is display during event.
	 *
	 * @return <code>true</code> if this ad campaign is display during event; <code>false</code> otherwise
	 */
	public boolean isDisplayDuringEvent();

	/**
	 * Sets whether this ad campaign is display during event.
	 *
	 * @param displayDuringEvent the display during event of this ad campaign
	 */
	public void setDisplayDuringEvent(boolean displayDuringEvent);

	/**
	 * Returns the display post event of this ad campaign.
	 *
	 * @return the display post event of this ad campaign
	 */
	public boolean getDisplayPostEvent();

	/**
	 * Returns <code>true</code> if this ad campaign is display post event.
	 *
	 * @return <code>true</code> if this ad campaign is display post event; <code>false</code> otherwise
	 */
	public boolean isDisplayPostEvent();

	/**
	 * Sets whether this ad campaign is display post event.
	 *
	 * @param displayPostEvent the display post event of this ad campaign
	 */
	public void setDisplayPostEvent(boolean displayPostEvent);

	/**
	 * Returns the frequency per hour of this ad campaign.
	 *
	 * @return the frequency per hour of this ad campaign
	 */
	public long getFrequencyPerHour();

	/**
	 * Sets the frequency per hour of this ad campaign.
	 *
	 * @param frequencyPerHour the frequency per hour of this ad campaign
	 */
	public void setFrequencyPerHour(long frequencyPerHour);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.rumbasolutions.flask.model.AdCampaign adCampaign);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.rumbasolutions.flask.model.AdCampaign> toCacheModel();

	@Override
	public com.rumbasolutions.flask.model.AdCampaign toEscapedModel();

	@Override
	public com.rumbasolutions.flask.model.AdCampaign toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}