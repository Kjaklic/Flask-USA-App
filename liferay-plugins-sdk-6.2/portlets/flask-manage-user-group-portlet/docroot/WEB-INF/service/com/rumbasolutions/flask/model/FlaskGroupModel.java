/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rumbasolutions.flask.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the FlaskGroup service. Represents a row in the &quot;flaskgroup_FlaskGroup&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.rumbasolutions.flask.model.impl.FlaskGroupModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.rumbasolutions.flask.model.impl.FlaskGroupImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FlaskGroup
 * @see com.rumbasolutions.flask.model.impl.FlaskGroupImpl
 * @see com.rumbasolutions.flask.model.impl.FlaskGroupModelImpl
 * @generated
 */
public interface FlaskGroupModel extends BaseModel<FlaskGroup> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a flask group model instance should use the {@link FlaskGroup} interface instead.
	 */

	/**
	 * Returns the primary key of this flask group.
	 *
	 * @return the primary key of this flask group
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this flask group.
	 *
	 * @param primaryKey the primary key of this flask group
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the group ID of this flask group.
	 *
	 * @return the group ID of this flask group
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this flask group.
	 *
	 * @param groupId the group ID of this flask group
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the group name of this flask group.
	 *
	 * @return the group name of this flask group
	 */
	@AutoEscape
	public String getGroupName();

	/**
	 * Sets the group name of this flask group.
	 *
	 * @param groupName the group name of this flask group
	 */
	public void setGroupName(String groupName);

	/**
	 * Returns the group description of this flask group.
	 *
	 * @return the group description of this flask group
	 */
	@AutoEscape
	public String getGroupDescription();

	/**
	 * Sets the group description of this flask group.
	 *
	 * @param groupDescription the group description of this flask group
	 */
	public void setGroupDescription(String groupDescription);

	/**
	 * Returns the created date of this flask group.
	 *
	 * @return the created date of this flask group
	 */
	@AutoEscape
	public String getCreatedDate();

	/**
	 * Sets the created date of this flask group.
	 *
	 * @param createdDate the created date of this flask group
	 */
	public void setCreatedDate(String createdDate);

	/**
	 * Returns the created by of this flask group.
	 *
	 * @return the created by of this flask group
	 */
	@AutoEscape
	public String getCreatedBy();

	/**
	 * Sets the created by of this flask group.
	 *
	 * @param createdBy the created by of this flask group
	 */
	public void setCreatedBy(String createdBy);

	/**
	 * Returns the is active of this flask group.
	 *
	 * @return the is active of this flask group
	 */
	public int getIsActive();

	/**
	 * Sets the is active of this flask group.
	 *
	 * @param isActive the is active of this flask group
	 */
	public void setIsActive(int isActive);

	/**
	 * Returns the is delete of this flask group.
	 *
	 * @return the is delete of this flask group
	 */
	public int getIsDelete();

	/**
	 * Sets the is delete of this flask group.
	 *
	 * @param isDelete the is delete of this flask group
	 */
	public void setIsDelete(int isDelete);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.rumbasolutions.flask.model.FlaskGroup flaskGroup);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.rumbasolutions.flask.model.FlaskGroup> toCacheModel();

	@Override
	public com.rumbasolutions.flask.model.FlaskGroup toEscapedModel();

	@Override
	public com.rumbasolutions.flask.model.FlaskGroup toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}