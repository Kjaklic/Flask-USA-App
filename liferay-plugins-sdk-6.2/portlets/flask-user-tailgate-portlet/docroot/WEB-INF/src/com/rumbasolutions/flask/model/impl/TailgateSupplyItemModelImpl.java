/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rumbasolutions.flask.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rumbasolutions.flask.model.TailgateSupplyItem;
import com.rumbasolutions.flask.model.TailgateSupplyItemModel;
import com.rumbasolutions.flask.model.TailgateSupplyItemSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TailgateSupplyItem service. Represents a row in the &quot;flasktailgate_TailgateSupplyItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rumbasolutions.flask.model.TailgateSupplyItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TailgateSupplyItemImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TailgateSupplyItemImpl
 * @see com.rumbasolutions.flask.model.TailgateSupplyItem
 * @see com.rumbasolutions.flask.model.TailgateSupplyItemModel
 * @generated
 */
@JSON(strict = true)
public class TailgateSupplyItemModelImpl extends BaseModelImpl<TailgateSupplyItem>
	implements TailgateSupplyItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tailgate supply item model instance should use the {@link com.rumbasolutions.flask.model.TailgateSupplyItem} interface instead.
	 */
	public static final String TABLE_NAME = "flasktailgate_TailgateSupplyItem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "tailgateSupplyItemId", Types.BIGINT },
			{ "supplyListItemName", Types.VARCHAR },
			{ "tailgateId", Types.BIGINT },
			{ "itemAssignedUserId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table flasktailgate_TailgateSupplyItem (tailgateSupplyItemId LONG not null primary key,supplyListItemName VARCHAR(75) null,tailgateId LONG,itemAssignedUserId LONG,companyId LONG,userId LONG,createdDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table flasktailgate_TailgateSupplyItem";
	public static final String ORDER_BY_JPQL = " ORDER BY tailgateSupplyItem.tailgateSupplyItemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY flasktailgate_TailgateSupplyItem.tailgateSupplyItemId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rumbasolutions.flask.model.TailgateSupplyItem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rumbasolutions.flask.model.TailgateSupplyItem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rumbasolutions.flask.model.TailgateSupplyItem"),
			true);
	public static long TAILGATEID_COLUMN_BITMASK = 1L;
	public static long USERID_COLUMN_BITMASK = 2L;
	public static long TAILGATESUPPLYITEMID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TailgateSupplyItem toModel(TailgateSupplyItemSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TailgateSupplyItem model = new TailgateSupplyItemImpl();

		model.setTailgateSupplyItemId(soapModel.getTailgateSupplyItemId());
		model.setSupplyListItemName(soapModel.getSupplyListItemName());
		model.setTailgateId(soapModel.getTailgateId());
		model.setItemAssignedUserId(soapModel.getItemAssignedUserId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TailgateSupplyItem> toModels(
		TailgateSupplyItemSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TailgateSupplyItem> models = new ArrayList<TailgateSupplyItem>(soapModels.length);

		for (TailgateSupplyItemSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rumbasolutions.flask.model.TailgateSupplyItem"));

	public TailgateSupplyItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tailgateSupplyItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTailgateSupplyItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tailgateSupplyItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TailgateSupplyItem.class;
	}

	@Override
	public String getModelClassName() {
		return TailgateSupplyItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("tailgateSupplyItemId", getTailgateSupplyItemId());
		attributes.put("supplyListItemName", getSupplyListItemName());
		attributes.put("tailgateId", getTailgateId());
		attributes.put("itemAssignedUserId", getItemAssignedUserId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long tailgateSupplyItemId = (Long)attributes.get("tailgateSupplyItemId");

		if (tailgateSupplyItemId != null) {
			setTailgateSupplyItemId(tailgateSupplyItemId);
		}

		String supplyListItemName = (String)attributes.get("supplyListItemName");

		if (supplyListItemName != null) {
			setSupplyListItemName(supplyListItemName);
		}

		Long tailgateId = (Long)attributes.get("tailgateId");

		if (tailgateId != null) {
			setTailgateId(tailgateId);
		}

		Long itemAssignedUserId = (Long)attributes.get("itemAssignedUserId");

		if (itemAssignedUserId != null) {
			setItemAssignedUserId(itemAssignedUserId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getTailgateSupplyItemId() {
		return _tailgateSupplyItemId;
	}

	@Override
	public void setTailgateSupplyItemId(long tailgateSupplyItemId) {
		_tailgateSupplyItemId = tailgateSupplyItemId;
	}

	@JSON
	@Override
	public String getSupplyListItemName() {
		if (_supplyListItemName == null) {
			return StringPool.BLANK;
		}
		else {
			return _supplyListItemName;
		}
	}

	@Override
	public void setSupplyListItemName(String supplyListItemName) {
		_supplyListItemName = supplyListItemName;
	}

	@JSON
	@Override
	public long getTailgateId() {
		return _tailgateId;
	}

	@Override
	public void setTailgateId(long tailgateId) {
		_columnBitmask |= TAILGATEID_COLUMN_BITMASK;

		if (!_setOriginalTailgateId) {
			_setOriginalTailgateId = true;

			_originalTailgateId = _tailgateId;
		}

		_tailgateId = tailgateId;
	}

	public long getOriginalTailgateId() {
		return _originalTailgateId;
	}

	@JSON
	@Override
	public long getItemAssignedUserId() {
		return _itemAssignedUserId;
	}

	@Override
	public void setItemAssignedUserId(long itemAssignedUserId) {
		_itemAssignedUserId = itemAssignedUserId;
	}

	@Override
	public String getItemAssignedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getItemAssignedUserId(), "uuid",
			_itemAssignedUserUuid);
	}

	@Override
	public void setItemAssignedUserUuid(String itemAssignedUserUuid) {
		_itemAssignedUserUuid = itemAssignedUserUuid;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			TailgateSupplyItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TailgateSupplyItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TailgateSupplyItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TailgateSupplyItemImpl tailgateSupplyItemImpl = new TailgateSupplyItemImpl();

		tailgateSupplyItemImpl.setTailgateSupplyItemId(getTailgateSupplyItemId());
		tailgateSupplyItemImpl.setSupplyListItemName(getSupplyListItemName());
		tailgateSupplyItemImpl.setTailgateId(getTailgateId());
		tailgateSupplyItemImpl.setItemAssignedUserId(getItemAssignedUserId());
		tailgateSupplyItemImpl.setCompanyId(getCompanyId());
		tailgateSupplyItemImpl.setUserId(getUserId());
		tailgateSupplyItemImpl.setCreatedDate(getCreatedDate());
		tailgateSupplyItemImpl.setModifiedDate(getModifiedDate());

		tailgateSupplyItemImpl.resetOriginalValues();

		return tailgateSupplyItemImpl;
	}

	@Override
	public int compareTo(TailgateSupplyItem tailgateSupplyItem) {
		long primaryKey = tailgateSupplyItem.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TailgateSupplyItem)) {
			return false;
		}

		TailgateSupplyItem tailgateSupplyItem = (TailgateSupplyItem)obj;

		long primaryKey = tailgateSupplyItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TailgateSupplyItemModelImpl tailgateSupplyItemModelImpl = this;

		tailgateSupplyItemModelImpl._originalTailgateId = tailgateSupplyItemModelImpl._tailgateId;

		tailgateSupplyItemModelImpl._setOriginalTailgateId = false;

		tailgateSupplyItemModelImpl._originalUserId = tailgateSupplyItemModelImpl._userId;

		tailgateSupplyItemModelImpl._setOriginalUserId = false;

		tailgateSupplyItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TailgateSupplyItem> toCacheModel() {
		TailgateSupplyItemCacheModel tailgateSupplyItemCacheModel = new TailgateSupplyItemCacheModel();

		tailgateSupplyItemCacheModel.tailgateSupplyItemId = getTailgateSupplyItemId();

		tailgateSupplyItemCacheModel.supplyListItemName = getSupplyListItemName();

		String supplyListItemName = tailgateSupplyItemCacheModel.supplyListItemName;

		if ((supplyListItemName != null) && (supplyListItemName.length() == 0)) {
			tailgateSupplyItemCacheModel.supplyListItemName = null;
		}

		tailgateSupplyItemCacheModel.tailgateId = getTailgateId();

		tailgateSupplyItemCacheModel.itemAssignedUserId = getItemAssignedUserId();

		tailgateSupplyItemCacheModel.companyId = getCompanyId();

		tailgateSupplyItemCacheModel.userId = getUserId();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			tailgateSupplyItemCacheModel.createdDate = createdDate.getTime();
		}
		else {
			tailgateSupplyItemCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tailgateSupplyItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			tailgateSupplyItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return tailgateSupplyItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{tailgateSupplyItemId=");
		sb.append(getTailgateSupplyItemId());
		sb.append(", supplyListItemName=");
		sb.append(getSupplyListItemName());
		sb.append(", tailgateId=");
		sb.append(getTailgateId());
		sb.append(", itemAssignedUserId=");
		sb.append(getItemAssignedUserId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.rumbasolutions.flask.model.TailgateSupplyItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>tailgateSupplyItemId</column-name><column-value><![CDATA[");
		sb.append(getTailgateSupplyItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplyListItemName</column-name><column-value><![CDATA[");
		sb.append(getSupplyListItemName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tailgateId</column-name><column-value><![CDATA[");
		sb.append(getTailgateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemAssignedUserId</column-name><column-value><![CDATA[");
		sb.append(getItemAssignedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TailgateSupplyItem.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TailgateSupplyItem.class
		};
	private long _tailgateSupplyItemId;
	private String _supplyListItemName;
	private long _tailgateId;
	private long _originalTailgateId;
	private boolean _setOriginalTailgateId;
	private long _itemAssignedUserId;
	private String _itemAssignedUserUuid;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private Date _createdDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private TailgateSupplyItem _escapedModel;
}