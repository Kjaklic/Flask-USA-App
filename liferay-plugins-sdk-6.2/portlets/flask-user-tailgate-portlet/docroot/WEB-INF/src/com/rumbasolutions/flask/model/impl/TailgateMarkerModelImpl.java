/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rumbasolutions.flask.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rumbasolutions.flask.model.TailgateMarker;
import com.rumbasolutions.flask.model.TailgateMarkerModel;
import com.rumbasolutions.flask.model.TailgateMarkerSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TailgateMarker service. Represents a row in the &quot;flasktailgate_TailgateMarker&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rumbasolutions.flask.model.TailgateMarkerModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TailgateMarkerImpl}.
 * </p>
 *
 * @author rajeshj
 * @see TailgateMarkerImpl
 * @see com.rumbasolutions.flask.model.TailgateMarker
 * @see com.rumbasolutions.flask.model.TailgateMarkerModel
 * @generated
 */
@JSON(strict = true)
public class TailgateMarkerModelImpl extends BaseModelImpl<TailgateMarker>
	implements TailgateMarkerModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tailgate marker model instance should use the {@link com.rumbasolutions.flask.model.TailgateMarker} interface instead.
	 */
	public static final String TABLE_NAME = "flasktailgate_TailgateMarker";
	public static final Object[][] TABLE_COLUMNS = {
			{ "tailgatemarkerid", Types.BIGINT },
			{ "tailgateid", Types.BIGINT },
			{ "latitude", Types.VARCHAR },
			{ "longitude", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table flasktailgate_TailgateMarker (tailgatemarkerid LONG not null primary key,tailgateid LONG,latitude VARCHAR(75) null,longitude VARCHAR(75) null,name VARCHAR(75) null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table flasktailgate_TailgateMarker";
	public static final String ORDER_BY_JPQL = " ORDER BY tailgateMarker.tailgatemarkerid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY flasktailgate_TailgateMarker.tailgatemarkerid ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rumbasolutions.flask.model.TailgateMarker"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rumbasolutions.flask.model.TailgateMarker"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rumbasolutions.flask.model.TailgateMarker"),
			true);
	public static long TAILGATEID_COLUMN_BITMASK = 1L;
	public static long TAILGATEMARKERID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TailgateMarker toModel(TailgateMarkerSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TailgateMarker model = new TailgateMarkerImpl();

		model.setTailgatemarkerid(soapModel.getTailgatemarkerid());
		model.setTailgateid(soapModel.getTailgateid());
		model.setLatitude(soapModel.getLatitude());
		model.setLongitude(soapModel.getLongitude());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TailgateMarker> toModels(TailgateMarkerSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TailgateMarker> models = new ArrayList<TailgateMarker>(soapModels.length);

		for (TailgateMarkerSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rumbasolutions.flask.model.TailgateMarker"));

	public TailgateMarkerModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tailgatemarkerid;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTailgatemarkerid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tailgatemarkerid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TailgateMarker.class;
	}

	@Override
	public String getModelClassName() {
		return TailgateMarker.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("tailgatemarkerid", getTailgatemarkerid());
		attributes.put("tailgateid", getTailgateid());
		attributes.put("latitude", getLatitude());
		attributes.put("longitude", getLongitude());
		attributes.put("name", getName());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long tailgatemarkerid = (Long)attributes.get("tailgatemarkerid");

		if (tailgatemarkerid != null) {
			setTailgatemarkerid(tailgatemarkerid);
		}

		Long tailgateid = (Long)attributes.get("tailgateid");

		if (tailgateid != null) {
			setTailgateid(tailgateid);
		}

		String latitude = (String)attributes.get("latitude");

		if (latitude != null) {
			setLatitude(latitude);
		}

		String longitude = (String)attributes.get("longitude");

		if (longitude != null) {
			setLongitude(longitude);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	@Override
	public long getTailgatemarkerid() {
		return _tailgatemarkerid;
	}

	@Override
	public void setTailgatemarkerid(long tailgatemarkerid) {
		_tailgatemarkerid = tailgatemarkerid;
	}

	@JSON
	@Override
	public long getTailgateid() {
		return _tailgateid;
	}

	@Override
	public void setTailgateid(long tailgateid) {
		_columnBitmask |= TAILGATEID_COLUMN_BITMASK;

		if (!_setOriginalTailgateid) {
			_setOriginalTailgateid = true;

			_originalTailgateid = _tailgateid;
		}

		_tailgateid = tailgateid;
	}

	public long getOriginalTailgateid() {
		return _originalTailgateid;
	}

	@JSON
	@Override
	public String getLatitude() {
		if (_latitude == null) {
			return StringPool.BLANK;
		}
		else {
			return _latitude;
		}
	}

	@Override
	public void setLatitude(String latitude) {
		_latitude = latitude;
	}

	@JSON
	@Override
	public String getLongitude() {
		if (_longitude == null) {
			return StringPool.BLANK;
		}
		else {
			return _longitude;
		}
	}

	@Override
	public void setLongitude(String longitude) {
		_longitude = longitude;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TailgateMarker.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TailgateMarker toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TailgateMarker)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TailgateMarkerImpl tailgateMarkerImpl = new TailgateMarkerImpl();

		tailgateMarkerImpl.setTailgatemarkerid(getTailgatemarkerid());
		tailgateMarkerImpl.setTailgateid(getTailgateid());
		tailgateMarkerImpl.setLatitude(getLatitude());
		tailgateMarkerImpl.setLongitude(getLongitude());
		tailgateMarkerImpl.setName(getName());
		tailgateMarkerImpl.setDescription(getDescription());

		tailgateMarkerImpl.resetOriginalValues();

		return tailgateMarkerImpl;
	}

	@Override
	public int compareTo(TailgateMarker tailgateMarker) {
		long primaryKey = tailgateMarker.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TailgateMarker)) {
			return false;
		}

		TailgateMarker tailgateMarker = (TailgateMarker)obj;

		long primaryKey = tailgateMarker.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TailgateMarkerModelImpl tailgateMarkerModelImpl = this;

		tailgateMarkerModelImpl._originalTailgateid = tailgateMarkerModelImpl._tailgateid;

		tailgateMarkerModelImpl._setOriginalTailgateid = false;

		tailgateMarkerModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TailgateMarker> toCacheModel() {
		TailgateMarkerCacheModel tailgateMarkerCacheModel = new TailgateMarkerCacheModel();

		tailgateMarkerCacheModel.tailgatemarkerid = getTailgatemarkerid();

		tailgateMarkerCacheModel.tailgateid = getTailgateid();

		tailgateMarkerCacheModel.latitude = getLatitude();

		String latitude = tailgateMarkerCacheModel.latitude;

		if ((latitude != null) && (latitude.length() == 0)) {
			tailgateMarkerCacheModel.latitude = null;
		}

		tailgateMarkerCacheModel.longitude = getLongitude();

		String longitude = tailgateMarkerCacheModel.longitude;

		if ((longitude != null) && (longitude.length() == 0)) {
			tailgateMarkerCacheModel.longitude = null;
		}

		tailgateMarkerCacheModel.name = getName();

		String name = tailgateMarkerCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			tailgateMarkerCacheModel.name = null;
		}

		tailgateMarkerCacheModel.description = getDescription();

		String description = tailgateMarkerCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			tailgateMarkerCacheModel.description = null;
		}

		return tailgateMarkerCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{tailgatemarkerid=");
		sb.append(getTailgatemarkerid());
		sb.append(", tailgateid=");
		sb.append(getTailgateid());
		sb.append(", latitude=");
		sb.append(getLatitude());
		sb.append(", longitude=");
		sb.append(getLongitude());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.rumbasolutions.flask.model.TailgateMarker");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>tailgatemarkerid</column-name><column-value><![CDATA[");
		sb.append(getTailgatemarkerid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tailgateid</column-name><column-value><![CDATA[");
		sb.append(getTailgateid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>latitude</column-name><column-value><![CDATA[");
		sb.append(getLatitude());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>longitude</column-name><column-value><![CDATA[");
		sb.append(getLongitude());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TailgateMarker.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TailgateMarker.class
		};
	private long _tailgatemarkerid;
	private long _tailgateid;
	private long _originalTailgateid;
	private boolean _setOriginalTailgateid;
	private String _latitude;
	private String _longitude;
	private String _name;
	private String _description;
	private long _columnBitmask;
	private TailgateMarker _escapedModel;
}